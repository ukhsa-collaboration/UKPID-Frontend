@use "abstracts/functions" as fns;
@use "abstracts/mixins";
@use "abstracts/variables/breakpoints";
@use "custom-properties";

@import "normalize.css";

html {
  box-sizing: border-box;
  height: 100%;
  width: 100%;
  text-size-adjust: none;
  user-select: none;
}

body {
  height: 100%;
  width: 100%;
}

#app {
  --app-gap: #{fns.gap(0.5)};

  font-family: var(--body-font);
  font-size: var(--type-ramp-base-font-size);
  line-height: var(--type-ramp-base-line-height);
  background-color: var(--neutral-layer-2);
  color: var(--neutral-foreground-rest);
  height: 100%;
  width: 100%;
  word-break: break-word;
  hyphens: auto;

  @media screen and (min-width: breakpoints.$xs) {
    word-break: normal;
    hyphens: unset;
  }

  @media screen and (min-width: breakpoints.$md) {
    --app-gap: #{fns.gap(1)};
  }

  @media screen and (min-width: breakpoints.$xl) {
    --app-gap: #{fns.gap(2)};
  }
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

.Caption2 {
  font-size: var(--type-ramp-minus-2-font-size);
  line-height: var(--type-ramp-minus-2-line-height);
  margin-top: var(--type-ramp-minus-2-top-margin);
  margin-bottom: var(--type-ramp-minus-2-bottom-margin);
  font-weight: var(--font-weight-normal);
}

small,
.Caption1 {
  font-size: var(--type-ramp-minus-1-font-size);
  line-height: var(--type-ramp-minus-1-line-height);
  margin-top: var(--type-ramp-minus-1-top-margin);
  margin-bottom: var(--type-ramp-minus-1-bottom-margin);
  font-weight: var(--font-weight-normal);
}

p,
.Body {
  font-size: var(--type-ramp-base-font-size);
  line-height: var(--type-ramp-base-line-height);
  margin-top: var(--type-ramp-base-top-margin);
  margin-bottom: var(--type-ramp-base-bottom-margin);
  font-weight: var(--font-weight-normal);
}

strong,
.Strong {
  font-weight: var(--font-weight-semibold);
}

.Stronger {
  font-weight: var(--font-weight-bold);
}

h6,
.Subtitle2 {
  font-size: var(--type-ramp-plus-1-font-size);
  line-height: var(--type-ramp-plus-1-line-height);
  margin-top: var(--type-ramp-plus-1-top-margin);
  margin-bottom: var(--type-ramp-plus-1-bottom-margin);
  font-weight: var(--font-weight-semibold);
}

h5,
.Subtitle1 {
  font-size: var(--type-ramp-plus-2-font-size);
  line-height: var(--type-ramp-plus-2-line-height);
  margin-top: var(--type-ramp-plus-2-top-margin);
  margin-bottom: var(--type-ramp-plus-2-bottom-margin);
  font-weight: var(--font-weight-semibold);
}

h4,
.Title3 {
  font-size: var(--type-ramp-plus-3-font-size);
  line-height: var(--type-ramp-plus-3-line-height);
  margin-top: var(--type-ramp-plus-3-top-margin);
  margin-bottom: var(--type-ramp-plus-3-bottom-margin);
  font-weight: var(--font-weight-semibold);
}

h3,
.Title2 {
  font-size: var(--type-ramp-plus-4-font-size);
  line-height: var(--type-ramp-plus-4-line-height);
  margin-top: var(--type-ramp-plus-4-top-margin);
  margin-bottom: var(--type-ramp-plus-4-bottom-margin);
  font-weight: var(--font-weight-semibold);
}

h2,
.Title1 {
  font-size: var(--type-ramp-plus-5-font-size);
  line-height: var(--type-ramp-plus-5-line-height);
  margin-top: var(--type-ramp-plus-5-top-margin);
  margin-bottom: var(--type-ramp-plus-5-bottom-margin);
  font-weight: var(--font-weight-semibold);
}

h1,
.LargeTitle {
  font-size: var(--type-ramp-plus-6-font-size);
  line-height: var(--type-ramp-plus-6-line-height);
  margin-top: var(--type-ramp-plus-6-top-margin);
  margin-bottom: var(--type-ramp-plus-6-bottom-margin);
  font-weight: var(--font-weight-semibold);
}

a {
  color: var(--link-color);
  text-decoration: var(--link-text-decoration);

  &:hover,
  &:focus-visible {
    color: var(--link-color-hover);
    text-decoration: var(--link-text-decoration-hover);
  }

  &:active {
    color: var(--link-color-active);
    text-decoration: var(--link-text-decoration-active);
  }
}

@media screen and (prefers-reduced-motion: no-preference) {
  // Fade out, slide in
  .EntranceLeaveActive {
    transition: all 0.2s cubic-bezier(0, 0, 0, 1);
  }

  .EntranceLeaveTo {
    opacity: 0;
  }

  .EntranceEnterActive {
    transition: all 0.1s cubic-bezier(0, 0, 0, 1) 0.2s;
  }

  .EntranceEnterFrom {
    transform: translateY(50px);
    height: calc(100% - 50px) !important;
    opacity: 0;
  }

  // Grow out, grow + fade in
  .DrillInLeaveActive {
    transition: all 0.1s cubic-bezier(0, 0, 0, 1);
  }

  .DrillInLeaveTo {
    transform: scale(1.05);
    opacity: 0;
  }

  .DrillInEnterActive {
    transition: all 0.1s cubic-bezier(0, 0, 0, 1) 0.1s;
  }

  .DrillInEnterFrom {
    transform: scale(0.95);
    opacity: 0;
  }

  // Shrink out, shrink + fade in
  .DrillOutLeaveActive {
    transition: all 0.1s cubic-bezier(0, 0, 0, 1);
  }

  .DrillOutLeaveTo {
    transform: scale(0.95);
    opacity: 0;
  }

  .DrillOutEnterActive {
    transition: all 0.1s cubic-bezier(0, 0, 0, 1) 0.1s;
  }

  .DrillOutEnterFrom {
    transform: scale(1.05);
    opacity: 0;
  }
}
